
# Smart pane switching with awareness of Vim splits -----------------------{{{1
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
# based on https://github.com/tony/tmux-config/blob/master/.tmux.conf
# }}}1

#added by sam@lf: to envoke .bash_profile, .bashrc
# set-option -g default-command bash
# set-option -g default-command bash
# default shell
set-option -g default-shell /bin/zsh

# These settings are based on http://pastebin.com/4ZCTcf7m
# ********************************************************
set -g status-keys vi
# Lengthen the amount of time status messages are displayed
set-option -g display-time 2000
set-option -g display-panes-time 3000
# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window
######################
### DESIGN CHANGES ###
######################

# panes
set -g pane-border-fg black
set -g pane-active-border-fg brightred

## Status bar design
# status line
#set -g status-justify left
set -g status-justify centre
set -g status-bg default
set -g status-fg colour12

# messaging
set -g message-fg black
set -g message-bg yellow
set -g message-command-fg blue
set -g message-command-bg black

#window mode
setw -g mode-bg colour6
setw -g mode-fg colour0

# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
setw -g window-status-current-bg colour0
setw -g window-status-current-fg colour11
setw -g window-status-current-attr dim
setw -g window-status-bg green
setw -g window-status-fg black
setw -g window-status-attr reverse

# Info on left (I don't have a session display for now)
# set -g status-left ''
# set-window-option -g status-left " #S "
set -g status-left-length 80
set -g status-left ' [ #S ] #(exec tmux ls| cut -d " " -f 1-3 |tr "\\n" "," )'

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

# The modes {
setw -g clock-mode-colour colour135
setw -g mode-attr bold
setw -g mode-fg colour196
setw -g mode-bg colour238

# }
# The panes {

set -g pane-border-bg colour235
set -g pane-border-fg colour238
set -g pane-active-border-bg colour236
set -g pane-active-border-fg colour51
# }

# The statusbar -----------------------------------------------------------{{{
set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-attr dim
# set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
# set -g status-left-length 20

setw -g window-status-current-fg colour81
setw -g window-status-current-bg colour238
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-fg colour138
setw -g window-status-bg colour235
setw -g window-status-attr none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour255
setw -g window-status-bell-bg colour1
# }}}

# The messages {

set -g message-attr bold
set -g message-fg colour232
set -g message-bg colour166

# }
######DESIGN END######
# set window split
bind-key v split-window -h
bind-key b split-window

# ********************************************************
# *********************colors*****************************
# ********************************************************

## https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
#set-option -g status-bg colour235 #base02
#set-option -g status-fg colour136 #yellow
#set-option -g status-attr default
#
## default window title colors
#set-window-option -g window-status-fg colour244 #base0
#set-window-option -g window-status-bg default
##set-window-option -g window-status-attr dim
#
## active window title colors
#set-window-option -g window-status-current-fg colour166 #orange
#set-window-option -g window-status-current-bg default
##set-window-option -g window-status-current-attr bright
#
## pane border
#set-option -g pane-border-fg colour235 #base02
#set-option -g pane-active-border-fg colour240 #base01
#
## message text
#set-option -g message-bg colour235 #base02
#set-option -g message-fg colour166 #orange
#
## pane number display
#set-option -g display-panes-active-colour colour33 #blue
#set-option -g display-panes-colour colour166 #orange
## clock
#set-window-option -g clock-mode-colour green #green
#
#
#set -g status-interval 1
#set -g status-justify centre # center align window list
#set -g status-left-length 20
#set -g status-right-length 140
#set -g status-left '#[fg=green]#H #[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
#set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load -i 1) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'
## ******************color and design end******************

# C-b is not acceptable -- Vim uses it
unbind C-b
# set-option -g prefix C-a
set-option -g prefix M-a
bind-key C-a last-window

# Added by user 'kitty@cat'
#unbind C-b
#set -g prefix `
#bind ` send-prefix
#bind-key L last-window

# Added by user 'kitty@cat'. messes up vim ctrl-f - 'move cursor down'
#unbind C-b
#set-option -g prefix C-f
#bind-key L last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Copy/Paste --------------------------------------------------------------{{{
set-window-option -g mode-keys vi
#bind-key -t vi-copy 'v' begin-selection
bind-key 'Escape' copy-mode  # enter copy mode: default [
bind-key 'p' paste-buffer  # paste: default ]
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
# bind-key -t vi-copy 'y' copy-selection
# added by sam@lf
#bind -t vi-copy y copy-pipe 'xclip -i -selection clipboard'
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection
# bind -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xsel -i --clipboard"
# copy to tmux clipboard
# https://github.com/gotbletu/shownotes/blob/master/tmux_2.4_copy_mode_vim.md
bind-key < run-shell "tmux set-buffer -- \"$(xsel -o -b)\"" \; display-message "Copy To Tmux Clipboard"
# added by sam@lf
# bind-key -t vi-copy 'y' copy-pipe "xclip -i -selection clipboard"
# move x clipboard into tmux paste buffer
# bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
# bind C-y run "tmux save-buffer - | xclip -i -selection clipboard"
# bind-key p save-buffer ~/.tmux-buffer \; run-shell "xsel -i -b <~/.tmux-buffer && rm ~/.tmux-buffer"
# }}}

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# rm mouse mode fail
set -g mouse off

# color
set -g default-terminal "screen-256color"
# set-option -sa terminal-overrides ",xterm-256color:Tc"
set-option -sa terminal-overrides ",st-256color:Tc"
# set-option -sa terminal-overrides ",rxvt-unicode-256color:Tc"

# status bar

# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.

# from powerline
run-shell "tmux set-environment -g TMUX_VERSION_MAJOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1 | sed 's/[^0-9]*//g')"
run-shell "tmux set-environment -g TMUX_VERSION_MINOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f2 | sed 's/[^0-9]*//g')"

if-shell '[$TMUX_VERSION_MAJOR -gt 1 -o \( $TMUX_VERSION_MAJOR -eq 1 -a $TMUX_VERSION_MINOR -ge 8 \)]' 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell '[$TMUX_VERSION_MAJOR -gt 1 -o \( $TMUX_VERSION_MAJOR -eq 1 -a $TMUX_VERSION_MINOR -ge 8 \)]' 'unbind s; bind s split-window -v -c "#{pane_current_path}"'
if-shell '[$TMUX_VERSION_MAJOR -gt 1 -o \( $TMUX_VERSION_MAJOR -eq 1 -a $TMUX_VERSION_MINOR -ge 8 \)]' "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell '[$TMUX_VERSION_MAJOR -gt 1 -o \( $TMUX_VERSION_MAJOR -eq 1 -a $TMUX_VERSION_MINOR -ge 8 \)]' 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell '[$TMUX_VERSION_MAJOR -gt 1 -o \( $TMUX_VERSION_MAJOR -eq 1 -a $TMUX_VERSION_MINOR -ge 8 \)]' 'unbind %; bind % split-window -h -c "#{pane_current_path}"'
