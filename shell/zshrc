# If you come from bash you might have to change your $PATH.
# there are 3 copies of the same $PATH elements.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Path to libevent libs. required by tmux.
export LD_LIBRARY_PATH="/usr/local/lib"

export MANPAGER="nvim +set\ filetype=man -"

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="my256"
# ZSH_THEME="robbyrussell"

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"
# source https://github.com/mattjj/my-oh-my-zsh/blob/master/history.zsh
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  docker
  history-substring-search
  zsh-autosuggestions
  colored-man-pages
  zsh-syntax-highlighting
  zsh-completions
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi
 export EDITOR='emacs'
export BROWSER='qutebrowser'
export BROWSERCLI='w3m'

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#

alias vim="nvim"
# Example aliases
alias zshconfig="vim ~/.zshrc"
alias ohmyzsh="vim ~/.oh-my-zsh"
alias sr="sr -browser=$BROWSERCLI"
alias surfraw="surfraw -browser=$BROWSER"
alias vless="~/Repos/neovim/runtime/macros/less.sh"
#alias python="/usr/bin/python3"

function ..(){
    builtin cd ../
    ls
}

# cd into a dir (disregard the file in the path) and ls.
function cd(){
    # man --pager='less -p"^CONDITIONAL EXPRESSIONS"' bash
    # ${argv[-1]%/* discards last part in the path
    # if it is not dir and it is a file, then set argv[-1] to parent dir
    [[ ! -d $argv[-1] ]] && [[ -f $argv[-1] ]] && argv[-1]=${argv[-1]%/*}
    builtin cd "$@"
    # do not 'ls' if 'cd' with no arg. '-z' means string is null
    [[ -z "$argv[-1]" ]] || ls
}

# mv and run ls if mv is successful.
function mv(){
    if /bin/mv "$@" ; then
        ls
    fi
}

# rm and run ls if rm is successful.
function rm(){
    if /bin/rm "$@" ; then
        ls "${argv[-1]%/*}"
    fi
}

# echo directory where ls is run
function ls(){
    args=("$@")
    [[ -d $argv[-1] ]] && echo -e "\x1b[34;01m $argv[-1]  \x1b[39;49;00m\n"
    [[ -f $argv[-1] ]] && echo -e "\x1b[34;01m ${argv[-1]%/*}  \x1b[39;49;00m\n"
    # last arg is not file or dir
    [[ ! -e $argv[-1] ]] && [[ ! -d $argv[-1] ]] && echo -e "\x1b[34;01m $(pwd)  \x1b[39;49;00m\n"
    /bin/ls "$@"
}

# start emacs with min config
function minemacs(){
    rm -r ~/.emacs.d
    ln -s ~/.local/share/emacs/mini.emacs.d ~/.emacs.d
    emacs "$@"
}

# start emacs for trying features
function temacs(){
    rm -r ~/.emacs.d
    ln -s ~/.local/share/emacs/try.emacs.d ~/.emacs.d
    emacs "$@"
}

# start my emacs
function memacs(){
  rm -r ~/.emacs.d
  ln -s ~/.local/share/emacs/my.emacs.d ~/.emacs.d
  emacs "$@"
}

# start spacemacs emacs
function semacs(){
  rm -r ~/.emacs.d
  ln -s ~/.local/share/emacs/space.emacs.d ~/.emacs.d
  emacs "$@"
}

# start doom emacs
function demacs(){
  rm -r ~/.emacs.d
  ln -s ~/.local/share/emacs/doom.emacs.d ~/.emacs.d
  emacs "$@"
}

# source ~/.profile
[[ -e ~/.profile ]] && emulate sh -c 'source ~/.profile'

#bindkey -v
# bind UP and DOWN arrow keys
zmodload zsh/terminfo
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down

# chars regarded as part of the word when deleting, moving cursor etc.
WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'

# extend active highliters. Only 'main' is active by default
# cursor disappears when moved back or forward as per the following issue:
# https://github.com/zsh-users/zsh-syntax-highlighting/issues/171
# ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)

# modify highlighting
# Declare the variable
typeset -A ZSH_HIGHLIGHT_STYLES

# To differentiate aliases from other command types
# ZSH_HIGHLIGHT_STYLES[alias]='fg=magenta,bold'

# ZSH_HIGHLIGHT_STYLES=(cursor underline)

# To have paths colored instead of underlined
#: ${ZSH_HIGHLIGHT_STYLES[path]:=underline} default
ZSH_HIGHLIGHT_STYLES[path]='fg=037'

# To disable highlighting of globbing expressions
ZSH_HIGHLIGHT_STYLES[globbing]='none'

# switch i3wm config.
func i3conf(){
case "$1" in
    "beakl")
        rm ~/.config/i3/config
        ln -s ~/redmoo/setupworkenv/i3wm/config_beakl.conf ~/.config/i3/config
        i3-msg reload
        ;;
    *)
        rm ~/.config/i3/config
        ln -s ~/redmoo/setupworkenv/i3wm/config ~/.config/i3/config
        i3-msg reload
        ;;
esac
}

# disable flow control, operated by Ctrl-s, Ctrl-q.
stty -ixon

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# export FZF_DEFAULT_COMMAND='ag --nocolor -g ""'
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*"'
export FZF_DEFAULT_OPS="--extended -m --border --height 40%"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND"
# fuzzy grep open via ag
vg() {
  local file

  # format 'filename:line_number:line_string'
  # search_result="$(ag --nobreak --noheading --ignore-dir={.git,} $@ | fzf -0 -1 --delimiter=: --nth=3..| awk -F: '{print $1}')"
  # sometimes you need file names to either select or exclude files
  # search_result="$(ag --nobreak --noheading --ignore-dir={.git,} $@ | fzf -0 -1 --delimiter=: --nth=3..)"
  search_result="$(ag --nobreak --noheading --ignore-dir={.git,} $@ | fzf -0 -1 )"
  file="$(echo ${search_result} | awk -F: '{print $1}')"
  line_number="$(echo ${search_result} | awk -F: '{print $2}')"

  if [[ -n $file ]]
  then
     vim  +${line_number} ${file}
  fi
}
# default value is 'fg=8' which is hard/impossible to read in dark color themes
# is not visible in dark solarised (true color).
# use this in dark backgrounds:
# ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=grey'
# use this in light backgrounds (ligth color themes)
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8'
# diable auto correct
unsetopt correct_all

# https://stackoverflow.com/a/19872708
if [[ "$TERM" == "dumb" ]]
then
    unsetopt zle
    unsetopt prompt_cr
    unsetopt prompt_subst
    unfunction precmd
    unfunction preexec
    PS1='$ '
fi

# opam configuration
test -r /home/sam/.opam/opam-init/init.zsh && . /home/sam/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true
